[{"/home/joseph_dux/BhotAala.com/Admin_END/pages/_app.js":"1","/home/joseph_dux/BhotAala.com/Admin_END/pages/_document.js":"2","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/auth/[...nextauth].js":"3","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/categories.js":"4","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/hello.js":"5","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/orders.js":"6","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/products.js":"7","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/sendEmail.js":"8","/home/joseph_dux/BhotAala.com/Admin_END/pages/api/upload.js":"9","/home/joseph_dux/BhotAala.com/Admin_END/pages/categories.js":"10","/home/joseph_dux/BhotAala.com/Admin_END/pages/index.js":"11","/home/joseph_dux/BhotAala.com/Admin_END/pages/orders.js":"12","/home/joseph_dux/BhotAala.com/Admin_END/pages/products/delete/[...id].js":"13","/home/joseph_dux/BhotAala.com/Admin_END/pages/products/edit/[...id].js":"14","/home/joseph_dux/BhotAala.com/Admin_END/pages/products/new.js":"15","/home/joseph_dux/BhotAala.com/Admin_END/pages/products.js":"16","/home/joseph_dux/BhotAala.com/Admin_END/components/Layout.js":"17","/home/joseph_dux/BhotAala.com/Admin_END/components/Logo.js":"18","/home/joseph_dux/BhotAala.com/Admin_END/components/Nav.js":"19","/home/joseph_dux/BhotAala.com/Admin_END/components/ProductForm.js":"20","/home/joseph_dux/BhotAala.com/Admin_END/components/Spinner.js":"21","/home/joseph_dux/BhotAala.com/Admin_END/lib/mongodb.js":"22","/home/joseph_dux/BhotAala.com/Admin_END/lib/mongoose.js":"23","/home/joseph_dux/BhotAala.com/Admin_END/components/preview-confirmation-real.js":"24"},{"size":278,"mtime":1728314086000,"results":"25","hashOfConfig":"26"},{"size":231,"mtime":1728314086000,"results":"27","hashOfConfig":"26"},{"size":1054,"mtime":1730533580007,"results":"28","hashOfConfig":"26"},{"size":1837,"mtime":1728314086000,"results":"29","hashOfConfig":"26"},{"size":170,"mtime":1728314086000,"results":"30","hashOfConfig":"26"},{"size":2888,"mtime":1730331714869,"results":"31","hashOfConfig":"26"},{"size":1274,"mtime":1730293788484,"results":"32","hashOfConfig":"26"},{"size":966,"mtime":1730335081711,"results":"33","hashOfConfig":"26"},{"size":1423,"mtime":1730196901671,"results":"34","hashOfConfig":"26"},{"size":3883,"mtime":1728314086000,"results":"35","hashOfConfig":"26"},{"size":1530,"mtime":1730334933856,"results":"36","hashOfConfig":"26"},{"size":6757,"mtime":1730377798957,"results":"37","hashOfConfig":"26"},{"size":1067,"mtime":1728314086000,"results":"38","hashOfConfig":"26"},{"size":712,"mtime":1728314086000,"results":"39","hashOfConfig":"26"},{"size":227,"mtime":1728314086000,"results":"40","hashOfConfig":"26"},{"size":3736,"mtime":1730378763775,"results":"41","hashOfConfig":"26"},{"size":1691,"mtime":1728314086000,"results":"42","hashOfConfig":"26"},{"size":933,"mtime":1728314086000,"results":"43","hashOfConfig":"26"},{"size":3805,"mtime":1728314086000,"results":"44","hashOfConfig":"26"},{"size":9273,"mtime":1730202597057,"results":"45","hashOfConfig":"26"},{"size":158,"mtime":1728314086000,"results":"46","hashOfConfig":"26"},{"size":1015,"mtime":1728314086000,"results":"47","hashOfConfig":"26"},{"size":251,"mtime":1728314086000,"results":"48","hashOfConfig":"26"},{"size":8457,"mtime":1730375212885,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j6n70g",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joseph_dux/BhotAala.com/Admin_END/pages/_app.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/_document.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/auth/[...nextauth].js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/categories.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/hello.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/orders.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/products.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/sendEmail.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/api/upload.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/categories.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/index.js",["125"],[],"import Layout from \"@/components/Layout\";\nimport { useSession } from \"next-auth/react\";\nimport { useEffect } from \"react\";\n\nexport default function Home() {\n  const { data: session } = useSession();\n\n  useEffect(() => {\n    const sendEmails = async () => {\n      if (session) {\n        try {\n          console.log(\"User is logged in. Sending confirmation emails...\");\n          const response = await fetch(\"/api/sendEmail\", {\n            method: \"POST\",\n          });\n          if (response.ok) {\n            console.log(\"Confirmation emails sent.\");\n          } else {\n            console.error(\"Failed to send emails:\", response.statusText);\n          }\n        } catch (error) {\n          console.error(\"Error sending confirmation emails:\", error);\n        }\n      }\n    };\n\n    sendEmails(); // Invoke the function on component mount\n  }, [session]); // Dependency array includes `session` to run when it changes\n\n  return (\n    <Layout>\n      <div className=\"text-black bg-white w-screen h-screen flex items-start justify-start relative\">\n        <div className=\"absolute top-0 left-[25%] mt-4\">\n          <h2 className=\"text-3xl text-black font-bold mb-2\">\n            WELCOME TO THE SUDO PANEL\n          </h2>\n          <div className=\"flex bg-black-700 gap-1 text-black rounded-lg overflow-hidden animate-fade-in\">\n            <img src={session?.user?.image} alt=\"\" className=\"w-10 h-10\" />\n            <span className=\"px-2\">{session?.user?.name}</span>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","/home/joseph_dux/BhotAala.com/Admin_END/pages/orders.js",["126"],[],"import Layout from \"@/components/Layout\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function OrdersPage() {\n  const [orders, setOrders] = useState([]);\n  const [productDetails, setProductDetails] = useState({});\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('/api/orders');\n        const sortedOrders = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // Sort latest first\n        setOrders(sortedOrders);\n      } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n      }\n    };\n  \n    fetchOrders();\n  }, []);\n  \n\n  const fetchProductDetails = async (productId) => {\n    if (!productDetails[productId]) {\n      try {\n        const res = await axios.get(`/api/products/${productId}`);\n        setProductDetails(prev => ({ ...prev, [productId]: res.data }));\n      } catch (error) {\n        console.error(\"Error fetching product details:\", error);\n      }\n    } \n  };\n\n  const handlePaymentStatusChange = async (orderId) => {\n    try {\n      const response = await axios.put(`/api/orders`, { id: orderId, paid: true });\n      console.log(`Updated payment status for order ${orderId}:`, response.data); // Log the response after update\n      \n      setOrders(prevOrders =>\n        prevOrders.map(order =>\n          order._id === orderId ? { ...order, paid: true } : order\n        )\n      );\n    } catch (error) {\n      console.error(\"Error updating payment status:\", error);\n    }\n  };\n\n  const handleCheckboxChange = async (orderId) => {\n    try {\n      const response = await axios.put(`/api/orders`, { id: orderId, sendEmailSignal: true });\n      console.log(`Updated email status for order ${orderId}:`, response.data);\n  \n      setOrders(prevOrders =>\n        prevOrders.map(order =>\n          order._id === orderId ? { ...order, sendEmailSignal: true } : order\n        )\n      );\n    } catch (error) {\n      console.error(\"Error updating email status:\", error);\n    }\n  };\n\n  return (\n    <Layout>\n      <h1 className=\"text-3xl font-bold mb-6 text-center text-black\">Orders</h1>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full overflow-hidden\">\n          <thead className=\"bg-black text-white\">\n            <tr>\n              <th className=\"py-3 px-4 text-center\">Products</th>\n              <th className=\"py-3 px-4 text-center\">Date</th>\n              <th className=\"py-3 px-4 text-center\">Recipient</th>\n              <th className=\"py-3 px-4 text-center\">Properties</th>\n              <th className=\"py-3 px-4 text-center\">Payment Method</th>\n              <th className=\"py-3 px-4 text-center\">Payment Status</th>\n              <th className=\"py-3 px-4 text-center\">Mail Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.length > 0 ? (\n              orders.map(order => (\n                <tr key={order._id} className={`border-black hover:bg-gray-100 ${order.paid ? 'bg-green-200' : ''}`}>\n                  <td className=\"py-4 px-4\">\n                    {order.line_items.map(item => (\n                      <div key={item.productId} className=\"mb-2 flex items-center\">\n                        <img \n                          src={item.image} \n                          alt={`Product image for ${item.productId}`} \n                          className=\"w-16 h-16 object-cover mr-2 rounded\" \n                        />\n                        <div>\n                        <strong style={{ \n                            flex: \"1 1 auto\", \n                            whiteSpace: \"nowrap\", \n                            overflow: \"hidden\", \n                            textOverflow: \"ellipsis\" \n                          }}>\n                            {item.title.split(\" \").slice(0, 4).join(\" \") + (item.title.split(\" \").length > 4 ? \"...\" : \"\")}\n                          </strong> \n                          <br />\n\n                          <strong>Quantity:</strong> {item._doc?.quantity} <br />\n                          <strong>Starting Price:</strong> PKR {item.price} <br />\n                        </div>\n                      </div>\n                    ))}\n                  </td>\n                  <td className=\"py-4 px-4 text-center \">{(new Date(order.createdAt)).toLocaleString()}</td>\n                  <td className=\"py-4 px-4 text-center\">\n                    <div className=\"font-semibold\">{order.name}</div>\n                    <div>{order.email}</div>\n                    <div>{order.city}, {order.phone}</div>\n                    <div>{order.country}</div>\n                    <div>{order.streetAddress}</div>\n                  </td>\n                  <td className=\"py-4 px-4 text-center\">\n                    {order.line_items.map((item, index) => {\n                      const productId = item.productId;\n                      if (!productDetails[productId]) {\n                        fetchProductDetails(productId); \n                      }\n\n                      const selectedOptions = item._doc?.selectedOptions || {};\n                      let price = null;\n\n                      if (selectedOptions.Dimensions) {\n                        const priceMatch = selectedOptions.Dimensions.match(/\\(PKR\\s([\\d,.]+)\\)/);\n                        if (priceMatch) {\n                          price = priceMatch[1].replace(\",\", \"\");\n                        }\n                      }\n\n                      return (\n                        <div key={index}>\n                          <div>\n                            {selectedOptions.Dimensions || \"N/A\"}<br />\n                            {selectedOptions.Colors || \"N/A\"}<br />\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </td>\n                  <td className=\"py-4 px-4 text-center\">{order.paymentMethod || \"N/A\"}</td>\n                  <td className=\"py-4 px-4 text-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={order.paid}\n                      onChange={() => handlePaymentStatusChange(order._id)}\n                    />\n                  </td>\n                  <td className=\"py-4 px-4 text-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={order.sendEmailSignal}\n                      onChange={() => handleCheckboxChange(order._id)}\n                    />\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\" className=\"text-center py-4\">No orders found.</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n}\n","/home/joseph_dux/BhotAala.com/Admin_END/pages/products/delete/[...id].js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/products/edit/[...id].js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/products/new.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/pages/products.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/components/Layout.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/components/Logo.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/components/Nav.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/components/ProductForm.js",["127","128"],[],"import { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Spinner from \"@/components/Spinner\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport { useState, useEffect } from \"react\";\n\nexport default function ProductForm({\n  _id,\n  title: existingTitle,\n  description: existingDescription,\n  price: existingPrice,\n  discounted_percentage: existingdiscount,\n  images: existingImages,\n  category: assignedCategory,\n  properties: assignedProperties,\n}) {\n  const [title, setTitle] = useState(existingTitle || '');\n  const [description, setDescription] = useState(existingDescription || '');\n  const [category, setCategory] = useState(assignedCategory || '');\n  const [price, setPrice] = useState(existingPrice || '');\n  const [discounted_percentage, setdiscounted_percentage] = useState(existingdiscount || '');\n  const [images, setImages] = useState(existingImages || []);\n  const [goToProducts, setGoToProducts] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [prePropertiesNames, setprePropertiesNames] = useState(assignedProperties ? Object.keys(assignedProperties) : []);\n  const [customProperties, setCustomProperties] = useState(Array.isArray(assignedProperties) ? assignedProperties : []);\n  const router = useRouter();\n\n  useEffect(() => {\n    let newProps = [];\n    prePropertiesNames.map((pn, indx) => {\n      const prop = {\n        name: pn,\n        options: assignedProperties[pn],\n      };\n      newProps.push(prop);\n    });\n\n    setCustomProperties(newProps);\n  }, [prePropertiesNames]);\n\n  useEffect(() => {\n    axios.get('/api/categories')\n      .then(result => setCategories(result.data))\n      .catch(error => console.error('Error fetching categories:', error));\n  }, []);\n\n  useEffect(() => {\n    if (category) {\n      const catInfo = categories.find(({ _id: id }) => id === category);\n      if (catInfo && Array.isArray(catInfo.properties)) {\n        setCustomProperties(catInfo.properties.map(p => ({\n          ...p,\n          options: p.values || [''],\n        })));\n      }\n    }\n  }, [category, categories]);\n\n  async function saveProduct(ev) {\n    ev.preventDefault();\n    if (!title || !price || !category) {\n      alert('Title, price, and category are required fields.');\n      return;\n    }\n\n    const data = {\n      title,\n      description,\n      price,\n      discounted_percentage,\n      images,\n      category,\n      properties: customProperties.reduce((acc, property) => {\n        if (property.name && Array.isArray(property.options)) {\n          acc[property.name] = property.options;\n        }\n        return acc;\n      }, {}),\n    };\n\n    try {\n      if (_id) {\n        await axios.put('/api/products', { ...data, _id });\n      } else {\n        await axios.post('/api/products', data);\n      }\n      router.push('/products'); // Redirect to products page on successful save\n    } catch (error) {\n      console.error('Error saving product:', error.response?.data || error.message);\n    }\n  }\n\n  async function uploadImages(ev) {\n    const files = ev.target?.files;\n    if (files?.length > 0) {\n      setIsUploading(true);\n      const data = new FormData();\n      for (const file of files) {\n        data.append('file', file);\n      }\n      try {\n        const res = await axios.post('/api/upload', data);\n        setImages(oldImages => [...oldImages, ...res.data.links]);\n      } catch (error) {\n        console.error('Error uploading images:', error);\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  }\n\n  function updateImagesOrder(images) {\n    setImages(images);\n  }\n\n  function deleteImage(index) {\n    setImages(oldImages => oldImages.filter((_, i) => i !== index));\n  }\n\n  function addProperty() {\n    setCustomProperties([...customProperties, { name: '', options: [''] }]);\n  }\n\n  function updateProperty(index, field, value) {\n    const updatedProperties = [...customProperties];\n    updatedProperties[index][field] = value;\n    setCustomProperties(updatedProperties);\n  }\n\n  function addOption(index) {\n    const updatedProperties = [...customProperties];\n    updatedProperties[index].options.push('');\n    setCustomProperties(updatedProperties);\n  }\n\n  function updateOption(propertyIndex, optionIndex, value) {\n    const updatedProperties = [...customProperties];\n    updatedProperties[propertyIndex].options[optionIndex] = value;\n    setCustomProperties(updatedProperties);\n  }\n\n  function removeOption(propertyIndex, optionIndex) {\n    const updatedProperties = [...customProperties];\n    updatedProperties[propertyIndex].options.splice(optionIndex, 1);\n    setCustomProperties(updatedProperties);\n  }\n\n  function removeProperty(index) {\n    const updatedProperties = [...customProperties];\n    updatedProperties.splice(index, 1);\n    setCustomProperties(updatedProperties);\n  }\n\n  return (\n    <form onSubmit={saveProduct}>\n      <label>Product name</label>\n      <input\n        type=\"text\"\n        placeholder=\"Product name\"\n        value={title}\n        onChange={ev => setTitle(ev.target.value)}\n      />\n\n      <label>Category</label>\n      <select placeholder=\" Select category\" value={category} onChange={ev => setCategory(ev.target.value)}>\n        {categories.length > 0 && categories.map(c => (\n          <option key={c._id} value={c._id}>{c.name}</option>\n        ))}\n      </select>\n\n      <label>Custom Properties</label>\n      {customProperties.map((property, index) => (\n        <div key={index} className=\"mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Property name\"\n            value={property.name}\n            onChange={ev => updateProperty(index, 'name', ev.target.value)}\n            className=\"w-full mb-2\"\n          />\n\n          {property.options.map((option, optionIndex) => (\n            <div key={optionIndex} className=\"flex items-center mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Option\"\n                value={option}\n                onChange={ev => updateOption(index, optionIndex, ev.target.value)}\n                className=\"w-full\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => removeOption(index, optionIndex)}\n                className=\"ml-2 text-red-500\">\n                Remove\n              </button>\n            </div>\n          ))}\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={() => addOption(index)}\n              className=\"mr-2 text-blue-500\">\n              Add Option\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => removeProperty(index)}\n              className=\"text-red-500\">\n              Remove Property\n            </button>\n          </div>\n        </div>\n      ))}\n\n      <button\n        type=\"button\"\n        onClick={addProperty}\n        className=\"mb-6 text-green-500\">\n        Add Property\n      </button>\n\n      <div className=\"mb-4 flex flex-wrap\">\n        <ReactSortable\n          list={images}\n          className=\"flex flex-wrap gap-3\"\n          setList={updateImagesOrder}>\n          {!!images?.length && images.map((link, index) => (\n            <div key={link} className=\"relative h-24 bg-white p-4 shadow-sm rounded-sm border border-gray-200\">\n              <img src={link} alt=\"\" className=\"rounded-lg\" />\n              <button\n                type=\"button\"\n                onClick={() => deleteImage(index)}\n                className=\"absolute top-1 right-1 text-red-500\">\n                X\n              </button>\n            </div>\n          ))}\n        </ReactSortable>\n        {isUploading && (\n          <div className=\"h-24 flex items-center\">\n            <Spinner />\n          </div>\n        )}\n        <label className=\"w-24 h-24 cursor-pointer text-center flex flex-col items-center justify-center text-sm gap-1 text-primary rounded-sm bg-white shadow-sm border border-primary\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\" />\n          </svg>\n          <div>\n            Add image\n          </div>\n          <input type=\"file\" onChange={uploadImages} className=\"hidden\" multiple />\n        </label>\n      </div>\n\n      <label>Description</label>\n      <textarea\n        placeholder=\"Description\"\n        value={description}\n        onChange={ev => setDescription(ev.target.value)}\n        style={{ height: '200px' }} // Adjust the height as needed\n      />\n\n\n\n    <div>\n      <label>Price (in PKR)</label>\n      <input\n        type=\"number\"\n        placeholder=\"Price\"\n        value={price}\n        onChange={ev => setPrice(ev.target.value)}\n      />\n      <label>Dicounted Percentage</label>\n      <input\n        type=\"number\"\n        placeholder=\"% Discount\"\n        value={discounted_percentage}\n        onChange={ev => setdiscounted_percentage(ev.target.value)}\n      />\n      </div>\n\n\n      <button\n        type=\"submit\"\n        className=\"btn-primary\">\n        Save\n      </button>\n    </form>\n  );\n}\n","/home/joseph_dux/BhotAala.com/Admin_END/components/Spinner.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/lib/mongodb.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/lib/mongoose.js",[],[],"/home/joseph_dux/BhotAala.com/Admin_END/components/preview-confirmation-real.js",[],[],{"ruleId":"129","severity":1,"message":"130","line":38,"column":13,"nodeType":"131","endLine":38,"endColumn":76},{"ruleId":"129","severity":1,"message":"130","line":88,"column":25,"nodeType":"131","endLine":92,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":41,"column":6,"nodeType":"134","endLine":41,"endColumn":26,"suggestions":"135"},{"ruleId":"129","severity":1,"message":"130","line":233,"column":15,"nodeType":"131","endLine":233,"endColumn":63},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'assignedProperties'. Either include it or remove the dependency array.","ArrayExpression",["136"],{"desc":"137","fix":"138"},"Update the dependencies array to be: [assignedProperties, prePropertiesNames]",{"range":"139","text":"140"},[1588,1608],"[assignedProperties, prePropertiesNames]"]